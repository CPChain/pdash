#!/usr/bin/env bash

# version
VERSION="2.0.0"

if [ $PDASH_VERSION ];then
    export PDASH_VERSION=$VERSION
else
    VERSION=$PDASH_VERSION
fi

echo "Build PDash $VERSION..."

START=`date +%s`;

cd "$(dirname "${BASH_SOURCE[0]}")"/..

# Clean up
echo "Clean up"
rm -rf build/
rm -rf dist/

# OS
if [ "$(uname)" == "Darwin" ]; then
    # Mac OS
    APP_NAME="pdash-macos-$VERSION"
    APP_ICON="lib/pdash.icns"

    echo "Build..."
    # python -O -m PyInstaller -F -w cpchain/wallet/main.py --hidden-import=eth_hash.backends.pycryptodome --name $APP_NAME --icon $APP_ICON
    sed "s/'PDash/'$APP_NAME/g" PDash.spec > $APP_NAME.spec
    python -O -m PyInstaller $APP_NAME.spec
    rm $APP_NAME.spec

    echo "Copy cpchain..."
    cpc_path="cpchain/assets/"
    dist_path="dist/$APP_NAME.app/Contents/MacOS"
    mkdir -p $dist_path/$cpc_path
    cp -r $cpc_path/* $dist_path/$cpc_path/
    cp lib/cpchain.toml $dist_path/cpchain/
    # Dmg
    dmgbuild -s lib/settings.py -Dapp=dist/$APP_NAME.app "CPChain PDash" dist/$APP_NAME.dmg
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
    # GNU/Linux
    echo "Linux"
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW64_NT" ]; then
    # Windows
    APP_NAME="pdash-win10-$VERSION"
    APP_ICON="lib/pdash_1024x1024x32.ico"

    python -O -m PyInstaller -F -w cpchain/wallet/main.py \
        --hidden-import=eth_hash.backends.pycryptodome --name $APP_NAME \
        --icon $APP_ICON

    echo "Copy cpchain..."

    cpc_path="cpchain/assets/"
    dist_path="dist/"

    mkdir -p $dist_path/$cpc_path
    cp -r $cpc_path/* $dist_path/$cpc_path/
    cp lib/cpchain.toml $dist_path/cpchain/
    cp lib/Uninstall.bat $dist_path/
fi

# Timing
END=`date +%s`;
time=$[ END - START ]
echo "$time s, done"

